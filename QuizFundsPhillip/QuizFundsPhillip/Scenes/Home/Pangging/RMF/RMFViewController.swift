//
//  RMFViewController.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 29/1/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RMFDisplayLogic: class
{
  func displaySomething(viewModel: RMF.Something.ViewModel)
}

class RMFViewController: UIViewController, RMFDisplayLogic
{
    
    var name = [["Name": "KGARMF"],["Name": "KGARMF"],["Name": "KT-BOND RMF"],["Name": "ONE-UGERMF"],["Name": "PRINCIPAL"]]
    var number = [["Number": "16.4498"],["Number": "13.8776"],["Number": "10.8323"],["Number": "22.6820"],["Number": "15.0113"]]
    var double = [["Double": "+3.75%"],["Double": "+5.82%"],["Double": "+0.05%"],["Double": "+4.63%"],["Double": "-0.12%"]]
    var funds = [["Fund": "กองทุนเปิดเค โกลบอล แอลโลเคชั่น เพื่อการเลี้ยงชีพ"],["Fund": "กองทุนเปิดเค โกลบอล แอลโลเคชั่น เพื่อการเลี้ยงชีพ"],["Fund": "กองทุนเปิดเคแทม เวิร์ล บอนด์ เพื่อการเลี้ยงชีพ"],["Fund": "กองทุนเปิด วรรณ อัลติเมท โกลบอล อิควิตี้ เพื่อการเลี้ยงชีพ"],["Fund": "กองทุนเปิดพรินซิเพิล หุ้นทุนเพื่อการเลี้ยงชีพ"]],
      datesss =  [["Dates": "08/01/2564"],["Dates": "08/01/2564"],["Dates": "08/01/2564"],["Dates": "08/01/2564"],["Dates": "11/01/2564"]]
    var months =  [["Month": "1เดือน"],["Month": "1เดือน"],["Month": "1เดือน"],["Month": "1เดือน"],["Month": "1เดือน"]]
  var interactor: RMFBusinessLogic?
  var router: (NSObjectProtocol & RMFRoutingLogic & RMFDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = RMFInteractor()
    let presenter = RMFPresenter()
    let router = RMFRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = RMF.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: RMF.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
extension RMFViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return 5
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "RMFViewCell") as! RMFViewCell
        cell.data = name[indexPath.row]
        cell.dates = datesss[indexPath.row]
        cell.doubles = double[indexPath.row]
        cell.funds = funds[indexPath.row]
        cell.numbers = number[indexPath.row]
        cell.months = months[indexPath.row]
        return cell
    }
    
    
}

