//
//  SSFViewController.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 29/1/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SSFDisplayLogic: class
{
  func displaySomething(viewModel: SSF.Something.ViewModel)
}

class SSFViewController: UIViewController, SSFDisplayLogic
{
    var name = [["Name": "K-CHANGE-SSF"],["Name": "KFAFIXSSF"],["Name": "MC-SCORE SSF"],["Name": "ONE-ALLCHINA-SSF"],["Name": "SCBGOLDH-SSF"]]
    var number = [["Number": "21.8804"],["Number": "11.0808"],["Number": "32.4036"],["Number": "16.2119"],["Number": "9.9140"]]
    var double = [["Double": "+7.71%"],["Double": "+0.26%"],["Double": "-0.96%"],["Double": "+6.79%"],["Double": "-0.51%"]]
    var funds = [["Fund": "กองทุนเปิดเค พอสซิทีฟ เชนจ์ หุ้นทุน ชนิดเพื่อการออม"],["Fund": "กองทุนเปิดกรุงศรีแอคทีฟตราสารหนี้ ชนิดเพื่อการออม -SSF"],["Fund": "กองทุนเปิด แมนูไลฟ์ สเตร็งค์ คอร์ หุ้นระยะยาว เพื่อการออม"],["Fund": "กองทุนเปิด วรรณออล ไชน่า อิควิตี้"],["Fund": "กองทุนเปิดไทยพาณิชย์โกลด์ THB เฮดจ์ ชนิดเพื่อการออม"]],
      datesss =  [["Dates": "11/01/2564"],["Dates": "12/01/2564"],["Dates": "12/01/2564"],["Dates": "11/01/2564"],["Dates": "12/01/2564"]]
    var months =  [["Month": "1เดือน"],["Month": "1เดือน"],["Month": "1เดือน"],["Month": "1เดือน"],["Month": "1เดือน"]]

    var interactor: SSFBusinessLogic?
  var router: (NSObjectProtocol & SSFRoutingLogic & SSFDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = SSFInteractor()
    let presenter = SSFPresenter()
    let router = SSFRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = SSF.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: SSF.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
extension SSFViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return 5
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "SSFViewCell") as! SSFViewCell
        
        cell.data = name[indexPath.row]
        cell.dates = datesss[indexPath.row]
        cell.doubles = double[indexPath.row]
        cell.funds = funds[indexPath.row]
        cell.numbers = number[indexPath.row]
        cell.months = months[indexPath.row]
        return cell
    }
    
    
}

