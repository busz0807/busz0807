//
//  SimulationportWorker.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 9/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire
import SwiftyJSON
class SimulationportWorker
{
    typealias Models = Simulationport
    typealias FecthGetOrderDataCompletionHandler = (_ getOrderData: GetOrderModel?,_ error: Error?) -> ()
    func fecthGetOrderData(username: String, portNo: Int,completionHandler: @escaping FecthGetOrderDataCompletionHandler) {
        let router = Funds.getOder.path
//        print("\(router)username=\(username)&portNo=\(portNo)")
//        let url = URL(string: "\(router)username=\(username)&portNo=\(portNo)" )!
//        var request = URLRequest(url: url)
//        request.httpMethod = "POST"
        Alamofire.request(router, method: .post, parameters: ["username": username, "portNo": portNo]).responseJSON { response in
            if response.error != nil {
                completionHandler(nil, response.error)
                return
            }
            
            if let data = response.data {
                do {
                    let getOrderModelData = try JSONDecoder().decode(GetOrderModel.self, from: data)
//                    print("getOrderModelData >> ", getOrderModelData)
                    completionHandler(getOrderModelData, nil)
                    
                } catch let error {
                    print("Failed to load: \(error.localizedDescription)")

                    completionHandler(nil, error)
                }
            }
        }
    }
    typealias FecthGetOrderDataCompletionHandler2 = (_ getOrderData2: GetOrderModel?,_ error: Error?) -> ()
    func fecthGetOrderData2(username: String, portNo: Int,completionHandler: @escaping FecthGetOrderDataCompletionHandler2) {
        let router = Funds.getOder.path
//        print("\(router)username=\(username)&portNo=\(portNo)")
//        let url = URL(string: "\(router)username=\(username)&portNo=\(portNo)" )!
//        var request = URLRequest(url: url)
//        request.httpMethod = "POST"
        Alamofire.request(router, method: .post, parameters: ["username": username, "portNo": portNo]).responseJSON { response in
            if response.error != nil {
                completionHandler(nil, response.error)
                return
            }
            
            if let data = response.data {
                do {
                    let getOrderModelData2 = try JSONDecoder().decode(GetOrderModel.self, from: data)
//                    print("getOrderModelData >> ", getOrderModelData)
                    completionHandler(getOrderModelData2, nil)
                    
                } catch let error {
                    print("Failed to load: \(error.localizedDescription)")

                    completionHandler(nil, error)
                }
            }
        }
    }
    typealias FecthGetOrderDataCompletionHandler3 = (_ getOrderData3: GetOrderModel?,_ error: Error?) -> ()
    func fecthGetOrderData3(username: String, portNo: Int,completionHandler: @escaping FecthGetOrderDataCompletionHandler3) {
        let router = Funds.getOder.path
//        print("\(router)username=\(username)&portNo=\(portNo)")
//        let url = URL(string: "\(router)username=\(username)&portNo=\(portNo)" )!
//        var request = URLRequest(url: url)
//        request.httpMethod = "POST"
        Alamofire.request(router, method: .post, parameters: ["username": username, "portNo": portNo]).responseJSON { response in
            if response.error != nil {
                completionHandler(nil, response.error)
                return
            }
            
            if let data = response.data {
                do {
                    let getOrderModelData3 = try JSONDecoder().decode(GetOrderModel.self, from: data)
//                    print("getOrderModelData >> ", getOrderModelData)
                    completionHandler(getOrderModelData3, nil)
                    
                } catch let error {
                    print("Failed to load: \(error.localizedDescription)")

                    completionHandler(nil, error)
                }
            }
        }
    }
    typealias FecthGetOrderDataCompletionHandler4 = (_ getOrderData4: GetOrderModel?,_ error: Error?) -> ()
    func fecthGetOrderData4(username: String, portNo: Int,completionHandler: @escaping FecthGetOrderDataCompletionHandler4) {
        let router = Funds.getOder.path
//        print("\(router)username=\(username)&portNo=\(portNo)")
//        let url = URL(string: "\(router)username=\(username)&portNo=\(portNo)" )!
//        var request = URLRequest(url: url)
//        request.httpMethod = "POST"
        Alamofire.request(router, method: .post, parameters: ["username": username, "portNo": portNo]).responseJSON { response in
            if response.error != nil {
                completionHandler(nil, response.error)
                return
            }
            
            if let data = response.data {
                do {
                    let getOrderModelData4 = try JSONDecoder().decode(GetOrderModel.self, from: data)
//                    print("getOrderModelData >> ", getOrderModelData)
                    completionHandler(getOrderModelData4, nil)
                    
                } catch let error {
                    print("Failed to load: \(error.localizedDescription)")

                    completionHandler(nil, error)
                }
            }
        }
    }
    typealias FecthGetOrderDataCompletionHandler5 = (_ getOrderData5: GetOrderModel?,_ error: Error?) -> ()
    func fecthGetOrderData5(username: String, portNo: Int,completionHandler: @escaping FecthGetOrderDataCompletionHandler5) {
        let router = Funds.getOder.path
//        print("\(router)username=\(username)&portNo=\(portNo)")
//        let url = URL(string: "\(router)username=\(username)&portNo=\(portNo)" )!
//        var request = URLRequest(url: url)
//        request.httpMethod = "POST"
        Alamofire.request(router, method: .post, parameters: ["username": username, "portNo": portNo]).responseJSON { response in
            if response.error != nil {
                completionHandler(nil, response.error)
                return
            }
            
            if let data = response.data {
                do {
                    let getOrderModelData5 = try JSONDecoder().decode(GetOrderModel.self, from: data)
//                    print("getOrderModelData >> ", getOrderModelData)
                    completionHandler(getOrderModelData5, nil)
                    
                } catch let error {
                    print("Failed to load: \(error.localizedDescription)")

                    completionHandler(nil, error)
                }
            }
        }
    }
}
