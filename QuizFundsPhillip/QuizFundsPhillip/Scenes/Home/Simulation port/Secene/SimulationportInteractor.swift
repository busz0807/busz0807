//
//  SimulationportInteractor.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 9/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SimulationportBusinessLogic
{
    func doFecthGetOrderData(request: Simulationport.GetOrder.Request)
    func doFecthGetOrderData2(request: Simulationport.GetOrder2.Request)
    func doFecthGetOrderData3(request: Simulationport.GetOrder3.Request)
    func doFecthGetOrderData4(request: Simulationport.GetOrder4.Request)
    func doFecthGetOrderData5(request: Simulationport.GetOrder5.Request)
}

protocol SimulationportDataStore
{
    var getOrderData: GetOrderModel? { get set }
    var getOrderData2: GetOrderModel? { get set }
    var getOrderData3: GetOrderModel? { get set }
    var getOrderData4: GetOrderModel? { get set }
    var getOrderData5: GetOrderModel? { get set }
}
class SimulationportInteractor:SimulationportBusinessLogic, SimulationportDataStore
{
    var getOrderData: GetOrderModel?
    var getOrderData2: GetOrderModel?
    var getOrderData3: GetOrderModel?
    var getOrderData4: GetOrderModel?
    var getOrderData5: GetOrderModel?
  var presenter: SimulationportPresentationLogic?
  var worker: SimulationportWorker?
    func doFecthGetOrderData(request: Simulationport.GetOrder.Request) {
        let username = request.username
        let portNo = request.portNo
        worker = SimulationportWorker()
        worker?.fecthGetOrderData (username: username, portNo: portNo){ (getOrderData , error ) in
            if error != nil {
                let response = Simulationport.GetOrder.Response(getOrderDate: nil, error: error)
                self.presenter?.presentdoFecthGetOrderData(response: response)
            }
            
            let response = Simulationport.GetOrder.Response(getOrderDate: getOrderData, error: nil)
    //      print("getOrderData", getOrderData)
            self.presenter?.presentdoFecthGetOrderData(response: response)
        }
    }
    
    func doFecthGetOrderData2(request: Simulationport.GetOrder2.Request) {
        let username = request.username
        let portNo = request.portNo
        worker = SimulationportWorker()
        worker?.fecthGetOrderData2 (username: username, portNo: portNo){ (getOrderData2 , error ) in
            if error != nil {
                let response = Simulationport.GetOrder2.Response(getOrderDate2: nil, error: error)
                self.presenter?.presentdoFecthGetOrderData2(response: response)
            }
            
            let response = Simulationport.GetOrder2.Response(getOrderDate2: getOrderData2, error: nil)
    //      print("getOrderData", getOrderData)
            self.presenter?.presentdoFecthGetOrderData2(response: response)
        }
    }
    
    func doFecthGetOrderData3(request: Simulationport.GetOrder3.Request) {
        let username = request.username
        let portNo = request.portNo
        worker = SimulationportWorker()
        worker?.fecthGetOrderData3 (username: username, portNo: portNo){ (getOrderData3 , error ) in
            if error != nil {
                let response = Simulationport.GetOrder3.Response(getOrderDate3: nil, error: error)
                self.presenter?.presentdoFecthGetOrderData3(response: response)
            }
            
            let response = Simulationport.GetOrder3.Response(getOrderDate3: getOrderData3, error: nil)
    //      print("getOrderData", getOrderData)
            self.presenter?.presentdoFecthGetOrderData3(response: response)
        }
    }
    
    func doFecthGetOrderData4(request: Simulationport.GetOrder4.Request) {
        let username = request.username
        let portNo = request.portNo
        worker = SimulationportWorker()
        worker?.fecthGetOrderData4 (username: username, portNo: portNo){ (getOrderData4 , error ) in
            if error != nil {
                let response = Simulationport.GetOrder4.Response(getOrderDate4: nil, error: error)
                self.presenter?.presentdoFecthGetOrderData4(response: response)
            }
            
            let response = Simulationport.GetOrder4.Response(getOrderDate4: getOrderData4, error: nil)
    //      print("getOrderData", getOrderData)
            self.presenter?.presentdoFecthGetOrderData4(response: response)
        }
    }
    
    func doFecthGetOrderData5(request: Simulationport.GetOrder5.Request) {
        let username = request.username
        let portNo = request.portNo
        worker = SimulationportWorker()
        worker?.fecthGetOrderData5 (username: username, portNo: portNo){ (getOrderData5 , error ) in
            if error != nil {
                let response = Simulationport.GetOrder5.Response(getOrderDate5: nil, error: error)
                self.presenter?.presentdoFecthGetOrderData5(response: response)
            }
            
            let response = Simulationport.GetOrder5.Response(getOrderDate5: getOrderData5, error: nil)
    //      print("getOrderData", getOrderData)
            self.presenter?.presentdoFecthGetOrderData5(response: response)
        }
    }
    

  //var name: String = ""
  
  // MARK: Do something

}
