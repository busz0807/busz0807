//
//  PortDetailInteractor.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 25/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PortDetailBusinessLogic
{
  func doDeletePort(request: PortDetail.DeletePort.Request)
   func doFetchPortNo(request: PortDetail.PortNo.Request)
}

protocol PortDetailDataStore
{
  var deleteData: DeleteModel? { get set }
    var portNo: Int? { get set }
}

class PortDetailInteractor: PortDetailBusinessLogic, PortDetailDataStore
{
    var portNo: Int?
    var deleteData: DeleteModel?
    var presenter: PortDetailPresentationLogic?
  var worker: PortDetailWorker?
  //var name: String = ""
  
  // MARK: Do something
    func doFetchPortNo(request: PortDetail.PortNo.Request) {
        worker = PortDetailWorker()
        let response = PortDetail.PortNo.Response(portno: portNo ?? 0)
        self.presenter?.presentFecthPortNo(response: response)
    }
  func doDeletePort(request: PortDetail.DeletePort.Request)
  {
    worker = PortDetailWorker()
   
    let delFlag = request.delFlag
    let username = request.username
    let portno = request.portNo
    let channel = request.channel
    worker?.fecthDelteData(delFlag: delFlag, username: username, portNo: portno, channel: channel){ (deleteData, error ) in
            if error != nil {
                let response = PortDetail.DeletePort.Response(delete: nil, error: error)
                self.presenter?.presentDeleteData(response: response)
            }
            
            let response = PortDetail.DeletePort.Response(delete: deleteData, error: error)
    //      print("getOrderData", getOrderData)
            self.presenter?.presentDeleteData(response: response)
        }

  }
}



