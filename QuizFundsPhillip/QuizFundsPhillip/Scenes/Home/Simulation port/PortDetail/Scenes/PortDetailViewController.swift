//
//  PortDetailViewController.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 25/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PortDetailDisplayLogic: class
{
  func displayDeletePort(viewModel: PortDetail.DeletePort.ViewModel)
    func displayFecthPortNo(viewModel: PortDetail.PortNo.ViewModel)
}

class PortDetailViewController: UIViewController, PortDetailDisplayLogic
{
   
   
    @IBOutlet weak var lbTitle: UILabel!
    @IBOutlet weak var viewbtn: UIView!
    @IBAction func btnback(_ sender: Any) {
        router?.dismiss()
    }
    
    @IBAction func btnclearport(_ sender: Any) {
        doDeletePort()
    }
    @IBOutlet weak var textField: UITextField! {
        didSet{
            textField.tintColor = UIColor.lightGray
            textField.setIcon(image: #imageLiteral(resourceName: "edit33"))
        }
        
    }
    var portNo = 0
    var interactor: PortDetailBusinessLogic?
  var router: (NSObjectProtocol & PortDetailRoutingLogic & PortDetailDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = PortDetailInteractor()
    let presenter = PortDetailPresenter()
    let router = PortDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    
    doFetchPortNo()
    self.viewbtn.clipsToBounds = true
    self.viewbtn.layer.cornerRadius = 25
    self.viewbtn.layer.shadowRadius = 15
    self.viewbtn.layer.masksToBounds = false
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
    func doFetchPortNo() {
      let request = PortDetail.PortNo.Request()
      interactor?.doFetchPortNo(request: request)
    }
    func displayFecthPortNo(viewModel: PortDetail.PortNo.ViewModel){
       
        self.portNo = viewModel.portno + 1
        print("portNo",  self.portNo)
        textField.text = "พอร์ตจำลอง \(self.portNo)"
        self.lbTitle.text = "พอร์ตจำลอง \(self.portNo)"
    }
  func doDeletePort()
  {
    let request = PortDetail.DeletePort.Request(delFlag: "P", username: "bookling01", portNo: self.portNo, channel: "PI")
    interactor?.doDeletePort(request: request)
  }
  
    func displayDeletePort(viewModel: PortDetail.DeletePort.ViewModel) {
        print("err", viewModel.error)
        print("nil", viewModel.delete?.Message ?? "Success")
  }
}
extension UITextField {
    func setIcon(image: UIImage) {
        let iconView = UIImageView(frame: CGRect(x: 5, y: 5, width: 16, height: 16))
        iconView.image = image
        let iconContainerView: UIView = UIView(frame:
                        CGRect(x: 15, y: 0, width: 25, height: 25))
         iconContainerView.addSubview(iconView)
         rightView = iconContainerView
         rightViewMode = .always
    }
}
