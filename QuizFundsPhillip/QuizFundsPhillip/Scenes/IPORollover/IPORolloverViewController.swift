//
//  IPORolloverViewController.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 28/1/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol IPORolloverDisplayLogic: class
{
    func displayfundIPO(viewModel: IPORollovers.FetchFromRemoteDataStore.ViewModel)
}

class IPORolloverViewController: UIViewController, IPORolloverDisplayLogic
{
    @IBOutlet weak var tableView: UITableView!
    var interactor: IPORolloverBusinessLogic?
  var router: (NSObjectProtocol & IPORolloverRoutingLogic & IPORolloverDataPassing)?
    var fundsIPOData : [FundIPORolloverDataModels]?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = IPORolloverInteractor()
    let presenter = IPORolloverPresenter()
    let router = IPORolloverRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  override func viewDidLoad()
  {
    super.viewDidLoad()
    self.navigationController?.navigationBar.titleTextAttributes = [NSAttributedString.Key.foregroundColor: UIColor.white]
    setupFetchFundsIPO()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
    func setupFetchFundsIPO() {
        let request = IPORollovers.FetchFromRemoteDataStore.Request(nameFunds: "IPO")
      interactor?.setupFetchFundsIPO(request: request)
    }
    func displayfundIPO(viewModel: IPORollovers.FetchFromRemoteDataStore.ViewModel) {
//    //nameTextField.text = viewModel.name
        
//        if viewModel.error != nil {
//            //alert error
//            print("viewModel.error>>", viewModel.error )
//            return
//        }
        self.fundsIPOData = viewModel.fundsIPO
        self.tableView.reloadData()
//        print("FundsIPO >> " , self.fundsIPOData)
        
      
  }
}
extension IPORolloverViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       
        return self.fundsIPOData?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "FundsIPOViewCell") as! FundsIPOViewCell
        cell.data = self.fundsIPOData?[indexPath.row]
//        cell.lbfundcode.text = self.fundsIPOData?.fundcode
//        cell.lbchnfname.text = self.fundsIPOData?.chnfmname
//        cell.lbipoRollOver.text = self.fundsIPOData?.ipoRollOver
//        cell.lbOfferExpire.text = "\(self.fundsIPOData?.ipoOfferDate2 ?? "") - \(self.fundsIPOData?.ipoExpireDate2 ?? "")"
//        let imageURL = self.fundsIPOData?.lgpic ?? ""
//        let url = URL(string: imageURL)
//        cell.imgLgpic.sd_setImage(with: url,  placeholderImage: UIImage(named: "Image"))
        return cell

    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        print(indexPath.row)
        if let fundsIPOData = self.fundsIPOData?[indexPath.row] {
            router?.goToFundIPO(fundsIPORollover: fundsIPOData)
        }
    }
    
}
