//
//  PaymentViewController.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 18/2/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PaymentDisplayLogic: class
{
  func displaySomething(viewModel: Payment.Something.ViewModel)
}

class PaymentViewController: UIViewController, PaymentDisplayLogic {
  
    @IBAction func btnconfirm(_ sender: Any) {
        print(self.paymentname)
        if self.paymentname == "" {
            let alert = UIAlertController(title: "ขออภัย", message: "โปรดเลือกช่องทางการชำระเงิน", preferredStyle: UIAlertController.Style.alert)
            alert.addAction(UIAlertAction(title: "ปิด", style: UIAlertAction.Style.default, handler: nil))
            self.present(alert, animated: true, completion: nil)
        }else {
        sendclick()
        self.view.window?.rootViewController?.dismiss(animated: true, completion: nil)
        }
    }
    @IBAction func btnKBank(_ sender: Any) {
        self.setbtnKBank.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named: ""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named: ""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "ธ.กสิกรไทย"
    }
    
    @IBAction func btnBKK(_ sender: Any) {
        self.setbtnBKK.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named: ""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "ธ.กรุงเทพ"
    }
    
    @IBAction func btnSCB(_ sender: Any) {
        self.setbtnSCB.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named: ""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "ธ.ไทยพาณิชย์"
    }
  
    @IBAction func btnPrepaid(_ sender: Any) {
        self.setbtnPrepaid.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named: ""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named: ""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "Prepaid"
    }
  
    @IBAction func btnCash(_ sender: Any) {
        self.setbtnCash.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named:""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named:""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "Cash"

    }
  
    @IBAction func btnDerivatives(_ sender: Any) {
        self.setbtnDerivatives.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named: ""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "Derivatives"
    }
    
    @IBAction func btnPayment(_ sender: Any) {
        self.setBtnPayment.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named: ""), for: .normal)
        self.setBtnIn.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "P-Money"
    }
    @IBAction func btnpayin(_ sender: Any) {
        self.setBtnIn.setImage( UIImage(named: "draw-check-mark"), for: .normal)
        self.setBtnPayment.setImage( UIImage(named: ""), for: .normal)
        self.setbtnKBank.setImage( UIImage(named: ""), for: .normal)
        self.setbtnBKK.setImage( UIImage(named: ""), for: .normal)
        self.setbtnCash.setImage( UIImage(named: ""), for: .normal)
        self.setbtnDerivatives.setImage( UIImage(named: ""), for: .normal)
        self.setbtnPrepaid.setImage( UIImage(named: ""), for: .normal)
        self.setbtnSCB.setImage( UIImage(named: ""), for: .normal)
        self.paymentname = "Pay-in"
    }
    @IBAction func btnClose(_ sender: Any) {
        self.dismiss(animated: false, completion: nil)
    }
    
    @IBOutlet weak var setbtnCloese: UIBarButtonItem!
    @IBOutlet weak var setnavTitle: UINavigationItem!
    @IBOutlet weak var setnavBar: UINavigationBar!
    
    @IBOutlet weak var setBtnIn: UIButton!
    @IBOutlet weak var setViewconfirm: UIView!
    @IBOutlet weak var setbtnBKK: UIButton!
    @IBOutlet weak var setbtnKBank: UIButton!
    @IBOutlet weak var setbtnSCB: UIButton!
    @IBOutlet weak var setbtnPrepaid: UIButton!
    @IBOutlet weak var setbtnCash: UIButton!
    @IBOutlet weak var setbtnDerivatives: UIButton!
    @IBOutlet weak var setBtnPayment: UIButton!
 
    var interactor: PaymentBusinessLogic?
    var router: (NSObjectProtocol & PaymentRoutingLogic & PaymentDataPassing)?
    var paymentname = String()
    var picefunds = String()
    var enName: String = ""
    var thName: String = ""
    var risk: String = ""
    var date: String = ""
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = PaymentInteractor()
    let presenter = PaymentPresenter()
    let router = PaymentRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
    self.setnavBar.titleTextAttributes = [NSAttributedString.Key.foregroundColor:UIColor.white]
    self.setnavBar.barTintColor = UIColor.systemBlue;  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = Payment.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: Payment.Something.ViewModel)
  {
//    print("PiceFundsPayment", viewModel.picefunds ?? "")
    self.picefunds = viewModel.picefunds ?? ""
    self.enName = viewModel.enName ?? ""
    self.thName = viewModel.thName ?? ""
    self.risk = viewModel.risk ?? ""
    self.date = viewModel.date ?? ""
  }
    func sendclick() {
        var data = [String: String]()
        let dataFormatter = DateFormatter()
        dataFormatter.dateFormat = "dd/MM/yyyy"
        let formattedDate = dataFormatter.string(from: Date())
        data["payment"] = self.paymentname
        data["picefunds"] = self.picefunds
        data["enName"] = self.enName 
        data["thName"] = self.thName 
        data["risk"] = self.risk
        if self.date == "" {
        data["date"] = formattedDate
        } else {
            data["date"] = self.date
        }
        NotificationCenter.default.post(name: NSNotification.Name(NotificationCenterSearch.Clicked.rawValue), object: nil, userInfo: data)
    }
}
